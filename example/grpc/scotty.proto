syntax = "proto3";

package scotty;

import "harness/wire.proto";
import "harness/postgres.proto";
import "harness/grpc.proto";
import "harness/logging.proto";
import "harness/http.proto";
import "harness/tracing.proto";

import "google/protobuf/empty.proto";

message Configuration {
    bool debug = 1;
    harness.postgres.Connection db = 2 [(harness.wire).input = "python/asyncpg:ConnectionWire"];
    harness.logging.Console console = 4 [(harness.wire).input = "python/logging:ConsoleWire"];
    harness.logging.Syslog syslog = 5 [(harness.wire).input = "python/logging:SyslogWire"];
    harness.tracing.Exporter tracing = 6 [(harness.wire).input = "python/opentelemetry.ext.jaeger:JaegerSpanExporterWire"];
    harness.grpc.Server server = 7 [(harness.wire).output = "python/grpclib:ServerWire"];
    harness.http.Server prometheus = 8 [(harness.wire).output = "python/prometheus:ServerWire"];
}

service Scotty {
    rpc BeamMeUp (google.protobuf.Empty) returns (google.protobuf.Empty) {}
}
