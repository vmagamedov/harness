# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: harness/wire.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='harness/wire.proto',
  package='harness',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n\x12harness/wire.proto\x12\x07harness\x1a google/protobuf/descriptor.proto\"\x84\x03\n\x0bHarnessWire\x12\x0f\n\x05input\x18\x01 \x01(\tH\x00\x12\x10\n\x06output\x18\x02 \x01(\tH\x00\x12\x33\n\nvisibility\x18\x03 \x01(\x0e\x32\x1f.harness.HarnessWire.Visibility\x12/\n\x08protocol\x18\x04 \x01(\x0e\x32\x1d.harness.HarnessWire.Protocol\x12\x32\n\x06\x61\x63\x63\x65ss\x18\x05 \x01(\x0e\x32\".harness.HarnessWire.Accessibility\"A\n\nVisibility\x12\x0b\n\x07PRIVATE\x10\x00\x12\x0c\n\x08HEADLESS\x10\x01\x12\x0c\n\x08INTERNAL\x10\x02\x12\n\n\x06PUBLIC\x10\x03\"\'\n\x08Protocol\x12\x07\n\x03TCP\x10\x00\x12\x08\n\x04HTTP\x10\x01\x12\x08\n\x04GRPC\x10\x02\"D\n\rAccessibility\x12\t\n\x05LOCAL\x10\x00\x12\r\n\tNAMESPACE\x10\x01\x12\x0b\n\x07\x43LUSTER\x10\x02\x12\x0c\n\x08\x45XTERNAL\x10\x03\x42\x06\n\x04type\"\xc7\x02\n\x0eHarnessService\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x34\n\tcontainer\x18\x02 \x01(\x0b\x32!.harness.HarnessService.Container\x1a\'\n\x08Resource\x12\x0b\n\x03\x63pu\x18\x01 \x01(\t\x12\x0e\n\x06memory\x18\x02 \x01(\t\x1aq\n\tResources\x12\x32\n\x08requests\x18\x01 \x01(\x0b\x32 .harness.HarnessService.Resource\x12\x30\n\x06limits\x18\x02 \x01(\x0b\x32 .harness.HarnessService.Resource\x1aU\n\tContainer\x12\x12\n\nrepository\x18\x01 \x01(\t\x12\x34\n\tresources\x18\x02 \x01(\x0b\x32!.harness.HarnessService.Resources:B\n\x04wire\x12\x1d.google.protobuf.FieldOptions\x18\xd1\x0f \x01(\x0b\x32\x14.harness.HarnessWire:J\n\x07service\x12\x1f.google.protobuf.MessageOptions\x18\xd1\x0f \x01(\x0b\x32\x17.harness.HarnessService')
  ,
  dependencies=[google_dot_protobuf_dot_descriptor__pb2.DESCRIPTOR,])


WIRE_FIELD_NUMBER = 2001
wire = _descriptor.FieldDescriptor(
  name='wire', full_name='harness.wire', index=0,
  number=2001, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  serialized_options=None, file=DESCRIPTOR)
SERVICE_FIELD_NUMBER = 2001
service = _descriptor.FieldDescriptor(
  name='service', full_name='harness.service', index=1,
  number=2001, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  serialized_options=None, file=DESCRIPTOR)

_HARNESSWIRE_VISIBILITY = _descriptor.EnumDescriptor(
  name='Visibility',
  full_name='harness.HarnessWire.Visibility',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PRIVATE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HEADLESS', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTERNAL', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PUBLIC', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=270,
  serialized_end=335,
)
_sym_db.RegisterEnumDescriptor(_HARNESSWIRE_VISIBILITY)

_HARNESSWIRE_PROTOCOL = _descriptor.EnumDescriptor(
  name='Protocol',
  full_name='harness.HarnessWire.Protocol',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TCP', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HTTP', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GRPC', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=337,
  serialized_end=376,
)
_sym_db.RegisterEnumDescriptor(_HARNESSWIRE_PROTOCOL)

_HARNESSWIRE_ACCESSIBILITY = _descriptor.EnumDescriptor(
  name='Accessibility',
  full_name='harness.HarnessWire.Accessibility',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LOCAL', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NAMESPACE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLUSTER', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXTERNAL', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=378,
  serialized_end=446,
)
_sym_db.RegisterEnumDescriptor(_HARNESSWIRE_ACCESSIBILITY)


_HARNESSWIRE = _descriptor.Descriptor(
  name='HarnessWire',
  full_name='harness.HarnessWire',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='harness.HarnessWire.input', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output', full_name='harness.HarnessWire.output', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='visibility', full_name='harness.HarnessWire.visibility', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='protocol', full_name='harness.HarnessWire.protocol', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='access', full_name='harness.HarnessWire.access', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _HARNESSWIRE_VISIBILITY,
    _HARNESSWIRE_PROTOCOL,
    _HARNESSWIRE_ACCESSIBILITY,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='type', full_name='harness.HarnessWire.type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=66,
  serialized_end=454,
)


_HARNESSSERVICE_RESOURCE = _descriptor.Descriptor(
  name='Resource',
  full_name='harness.HarnessService.Resource',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cpu', full_name='harness.HarnessService.Resource.cpu', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='memory', full_name='harness.HarnessService.Resource.memory', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=543,
  serialized_end=582,
)

_HARNESSSERVICE_RESOURCES = _descriptor.Descriptor(
  name='Resources',
  full_name='harness.HarnessService.Resources',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requests', full_name='harness.HarnessService.Resources.requests', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='limits', full_name='harness.HarnessService.Resources.limits', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=584,
  serialized_end=697,
)

_HARNESSSERVICE_CONTAINER = _descriptor.Descriptor(
  name='Container',
  full_name='harness.HarnessService.Container',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='harness.HarnessService.Container.repository', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='resources', full_name='harness.HarnessService.Container.resources', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=699,
  serialized_end=784,
)

_HARNESSSERVICE = _descriptor.Descriptor(
  name='HarnessService',
  full_name='harness.HarnessService',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='harness.HarnessService.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='container', full_name='harness.HarnessService.container', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_HARNESSSERVICE_RESOURCE, _HARNESSSERVICE_RESOURCES, _HARNESSSERVICE_CONTAINER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=457,
  serialized_end=784,
)

_HARNESSWIRE.fields_by_name['visibility'].enum_type = _HARNESSWIRE_VISIBILITY
_HARNESSWIRE.fields_by_name['protocol'].enum_type = _HARNESSWIRE_PROTOCOL
_HARNESSWIRE.fields_by_name['access'].enum_type = _HARNESSWIRE_ACCESSIBILITY
_HARNESSWIRE_VISIBILITY.containing_type = _HARNESSWIRE
_HARNESSWIRE_PROTOCOL.containing_type = _HARNESSWIRE
_HARNESSWIRE_ACCESSIBILITY.containing_type = _HARNESSWIRE
_HARNESSWIRE.oneofs_by_name['type'].fields.append(
  _HARNESSWIRE.fields_by_name['input'])
_HARNESSWIRE.fields_by_name['input'].containing_oneof = _HARNESSWIRE.oneofs_by_name['type']
_HARNESSWIRE.oneofs_by_name['type'].fields.append(
  _HARNESSWIRE.fields_by_name['output'])
_HARNESSWIRE.fields_by_name['output'].containing_oneof = _HARNESSWIRE.oneofs_by_name['type']
_HARNESSSERVICE_RESOURCE.containing_type = _HARNESSSERVICE
_HARNESSSERVICE_RESOURCES.fields_by_name['requests'].message_type = _HARNESSSERVICE_RESOURCE
_HARNESSSERVICE_RESOURCES.fields_by_name['limits'].message_type = _HARNESSSERVICE_RESOURCE
_HARNESSSERVICE_RESOURCES.containing_type = _HARNESSSERVICE
_HARNESSSERVICE_CONTAINER.fields_by_name['resources'].message_type = _HARNESSSERVICE_RESOURCES
_HARNESSSERVICE_CONTAINER.containing_type = _HARNESSSERVICE
_HARNESSSERVICE.fields_by_name['container'].message_type = _HARNESSSERVICE_CONTAINER
DESCRIPTOR.message_types_by_name['HarnessWire'] = _HARNESSWIRE
DESCRIPTOR.message_types_by_name['HarnessService'] = _HARNESSSERVICE
DESCRIPTOR.extensions_by_name['wire'] = wire
DESCRIPTOR.extensions_by_name['service'] = service
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

HarnessWire = _reflection.GeneratedProtocolMessageType('HarnessWire', (_message.Message,), {
  'DESCRIPTOR' : _HARNESSWIRE,
  '__module__' : 'harness.wire_pb2'
  # @@protoc_insertion_point(class_scope:harness.HarnessWire)
  })
_sym_db.RegisterMessage(HarnessWire)

HarnessService = _reflection.GeneratedProtocolMessageType('HarnessService', (_message.Message,), {

  'Resource' : _reflection.GeneratedProtocolMessageType('Resource', (_message.Message,), {
    'DESCRIPTOR' : _HARNESSSERVICE_RESOURCE,
    '__module__' : 'harness.wire_pb2'
    # @@protoc_insertion_point(class_scope:harness.HarnessService.Resource)
    })
  ,

  'Resources' : _reflection.GeneratedProtocolMessageType('Resources', (_message.Message,), {
    'DESCRIPTOR' : _HARNESSSERVICE_RESOURCES,
    '__module__' : 'harness.wire_pb2'
    # @@protoc_insertion_point(class_scope:harness.HarnessService.Resources)
    })
  ,

  'Container' : _reflection.GeneratedProtocolMessageType('Container', (_message.Message,), {
    'DESCRIPTOR' : _HARNESSSERVICE_CONTAINER,
    '__module__' : 'harness.wire_pb2'
    # @@protoc_insertion_point(class_scope:harness.HarnessService.Container)
    })
  ,
  'DESCRIPTOR' : _HARNESSSERVICE,
  '__module__' : 'harness.wire_pb2'
  # @@protoc_insertion_point(class_scope:harness.HarnessService)
  })
_sym_db.RegisterMessage(HarnessService)
_sym_db.RegisterMessage(HarnessService.Resource)
_sym_db.RegisterMessage(HarnessService.Resources)
_sym_db.RegisterMessage(HarnessService.Container)

wire.message_type = _HARNESSWIRE
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(wire)
service.message_type = _HARNESSSERVICE
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(service)

# @@protoc_insertion_point(module_scope)
