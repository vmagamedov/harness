syntax = "proto3";

package example;

import "harness/wire.proto";
import "harness/postgres.proto";
import "harness/http.proto";
import "harness/logging.proto";

message Configuration {
    option (harness.service).name = "whisper";
    option (harness.service).release = MULTI;
    option (harness.service).repository = "registry.acme.dev/team/whisper";

    bool debug = 1;

    harness.postgres.Connection db = 2 [
        (harness.wire).input = "python/asyncpg:ConnectionWire",
        (harness.wire).access = EXTERNAL,
        (harness.wire).secure = true
    ];
    harness.logging.Console console = 3 [(harness.wire).input = "python/logging:ConsoleWire"];
    harness.http.Server server = 4 [
        (harness.wire).output = "python/aiohttp:ServerWire",
        (harness.wire).visibility = PUBLIC,
        (harness.wire).protocol = HTTP
    ];
    harness.http.Server monitor = 5 [
        (harness.wire).output = "python/aiomonitor:MonitorWire",
        (harness.wire).protocol = HTTP
    ];
}
