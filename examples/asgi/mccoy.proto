syntax = "proto3";

package mccoy;

import "validate/validate.proto";
import "harness/wire.proto";
import "harness/http.proto";
import "harness/logging.proto";
import "harness/tracing.proto";

message Configuration {
    option (harness.service).name = "mccoy";
    option (harness.service).container.repository = "registry.acme.dev/team/mccoy";

    bool debug = 1;

    harness.http.Server server = 2 [
        (validate.rules).message.required = true,
        (harness.wire).output.type = "harness.wires.uvicorn.ServerWire",
        (harness.wire).output.expose = PUBLIC
    ];
    harness.logging.Console console = 3 [
        (validate.rules).message.required = true,
        (harness.wire).input.type = "harness.wires.logging.ConsoleWire"
    ];
    harness.tracing.Jaeger tracing = 4 [
        (validate.rules).message.required = true,
        (harness.wire).input.type = "harness.wires.opentelemetry.ext.jaeger.JaegerSpanExporterWire"
    ];
}
