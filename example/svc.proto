syntax = "proto3";

package example;

import "harness/options.proto";
import "harness/postgres.proto";
import "harness/grpc.proto";

import "google/protobuf/empty.proto";

message Configuration {
    bool debug = 1;
    harness.postgres.DSN db = 2 [(harness.options).input = "python/asyncpg.v1:Connection"];
    harness.grpc.Channel taskqueue = 3 [(harness.options).input = "python/grpclib.v1:Channel"];
    harness.grpc.Endpoint listen = 4 [(harness.options).output = "python/grpclib.v1:Server"];
}

service Example {
    rpc Store (google.protobuf.Empty) returns (google.protobuf.Empty) {}
}
